{"version":3,"sources":["images/ecommerceland.png","images/slide.jpg","Config/Config.js","Global/ProductsContext.js","Components/Footer.js","Global/CartReducer.js","Global/CartContext.js","Components/Navbar.js","Components/Products.js","Components/ContactInfo.js","Components/Home.js","Components/Signup.js","Components/Login.js","Components/NotFound.js","Components/Cart.js","Components/AddProducts.js","Components/Cashout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","storage","ProductsContext","createContext","ProductsContextProvider","state","products","prevProducts","this","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","ProductID","doc","id","ProductName","data","ProductPrice","ProductImg","setState","Provider","value","props","children","React","Component","Footer","style","backgroundColor","padding","width","bottom","textAlign","display","justifyContent","href","target","rel","margin","icon","faFacebook","size","faTwitter","faInstagram","borderTop","toast","configure","CartReducer","action","product","index","updatedPrice","updatedQty","shoppingCart","totalPrice","totalQty","find","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","qty","cart","TotalProductPrice","findIndex","filtered","filter","CartContext","CartContextProvider","useReducer","dispatch","Navbar","user","history","useHistory","useContext","className","src","logo","alt","to","onClick","signOut","then","Products","length","imageUrl","map","key","ContactInfo","Home","useEffect","onAuthStateChanged","Signup","useState","name","setName","email","setEmail","password","setPassword","error","setError","onSubmit","e","preventDefault","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","catch","err","message","htmlFor","required","onChange","Login","autoComplete","signInWithEmailAndPassword","placeholder","NotFound","Cart","ic_add","ic_remove","iosTrashOutline","marginTop","AddProducts","productName","setProductName","productPrice","setProductPrice","productImg","setProductImg","types","ref","put","on","bytesTransferred","totalBytes","console","log","child","getDownloadURL","url","add","Number","document","getElementById","selectedFile","files","includes","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","BuyerName","BuyerEmail","BuyerCell","BuyerAddress","BuyerPayment","BuyerQuantity","setTimeout","disabled","App","get","userData","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cebb5590.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ecommerceland.b78100d8.png\";","module.exports = __webpack_public_path__ + \"static/media/slide.ca306869.jpg\";","import * as firebase from 'firebase'\n\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDSGu760OOAqGh7DmmnN4rsFKzJw_OgR40\",\n    authDomain: \"ecommerce-website-85737.firebaseapp.com\",\n    databaseURL: \"https://ecommerce-website-85737.firebaseio.com\",\n    projectId: \"ecommerce-website-85737\",\n    storageBucket: \"ecommerce-website-85737.appspot.com\",\n    messagingSenderId: \"893071101658\",\n    appId: \"1:893071101658:web:86210a42d39b20c52f9fe3\",\n    measurementId: \"G-QZ8QDPE6QH\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\n\nexport { auth, db, storage }","import React, { createContext } from 'react'\nimport { db } from '../Config/Config'\n\nexport const ProductsContext = createContext();\n\nexport class ProductsContextProvider extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n\n        const prevProducts = this.state.products;\n        db.collection('Products').onSnapshot(snapshot => {\n            let changes = snapshot.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added') {\n                    prevProducts.push({\n                        ProductID: change.doc.id,\n                        ProductName: change.doc.data().ProductName,\n                        ProductPrice: change.doc.data().ProductPrice,\n                        ProductImg: change.doc.data().ProductImg\n                    })\n                }\n                this.setState({\n                    products: prevProducts\n                })\n            })\n        })\n\n    }\n    render() {\n        return (\n            <ProductsContext.Provider value={{ products: [...this.state.products] }}>\n                {this.props.children}\n            </ProductsContext.Provider>\n        )\n    }\n}\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\n\nexport const Footer = () => {\n    return (\n        <footer style={{backgroundColor: '#f8f9fa', padding: '10px', width: '100%', bottom: '0'}}>\n            <h3 style={{textAlign: 'center'}}>Follow Us :</h3>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n                <a href=\"https://www.facebook.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{margin: '0 10px'}}>\n                    <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n                </a>\n                <a href=\"https://www.twitter.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{margin: '0 10px'}}>\n                    <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n                </a>\n                <a href=\"https://www.instagram.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{margin: '0 10px'}}>\n                    <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n                </a>\n            </div>\n            <div style={{padding: '10px 0'}}>\n                <hr style={{borderTop: '1px solid #000', width: '80%', margin: '0 auto'}} />\n            </div>\n            <p style={{textAlign: 'center'}}>© 2024 CODMARKT</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nexport const CartReducer = (state, action) => {\n\n    const { shoppingCart, totalPrice, totalQty } = state;\n\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n\n    switch (action.type) {\n\n        case 'ADD_TO_CART':\n\n            const check = shoppingCart.find(product => product.ProductID === action.id);\n            if (check) {\n                toast.info('this product is already in your cart', {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: false,\n                    draggable: false,\n                    progress: undefined,\n                });\n                return state;\n            }\n            else {\n                product = action.product;\n                product['qty'] = 1;\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\n                updatedQty = totalQty + 1;\n                updatedPrice = totalPrice + product.ProductPrice;\n                return {\n                    shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            \n\n        case 'INC':\n            product = action.cart;\n            product.qty = ++product.qty;\n            product.TotalProductPrice = product.qty * product.ProductPrice;\n            updatedQty = totalQty + 1;\n            updatedPrice = totalPrice + product.ProductPrice;\n            index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n            shoppingCart[index] = product;\n            return {\n                shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            \n\n        case 'DEC':\n            product = action.cart;\n            if (product.qty > 1) {\n                product.qty = product.qty - 1;\n                product.TotalProductPrice = product.qty * product.ProductPrice;\n                updatedPrice = totalPrice - product.ProductPrice;\n                updatedQty = totalQty - 1;\n                index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n                shoppingCart[index] = product;\n                return {\n                    shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            else {\n                return state;\n            }\n            \n\n        case 'DELETE':\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\n            product = action.cart;\n            updatedQty = totalQty - product.qty;\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\n            return {\n                shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            \n\n        case 'EMPTY':\n            return {\n                shoppingCart: [], totalPrice: 0, totalQty: 0\n            }\n\n        default:\n            return state;\n\n    }\n\n}\n","import React, { createContext, useReducer } from 'react'\nimport { CartReducer } from './CartReducer'\n\nexport const CartContext = createContext();\n\nexport const CartContextProvider = (props) => {\n\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\n\n    return (\n        <CartContext.Provider value={{ ...cart, dispatch }}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport logo from '../images/ecommerceland.png'\nimport { Link } from 'react-router-dom'\nimport { auth } from '../Config/Config'\nimport { Icon } from 'react-icons-kit'\nimport { cart } from 'react-icons-kit/entypo/cart'\nimport { useHistory } from 'react-router-dom'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Navbar = ({ user }) => {\n\n    const history = useHistory();\n    const { totalQty } = useContext(CartContext);\n\n    // handle logout\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            history.push('/login');\n        })\n    }\n\n    return (\n        <div className='navbox'>\n            <div className='leftside'>\n                <img src={logo} alt=\"\" />\n            </div>\n            {!user && <div className='rightside'>\n                <span><Link to=\"signup\" className='navlink'>SIGN UP</Link></span>\n                <span><Link to=\"login\" className='navlink'>LOGIN</Link></span>\n            </div>}\n            {user && <div className='rightside'>\n                <span><Link to=\"/\" className='navlink'>{user}</Link></span>\n                <span><Link to=\"cartproducts\" className='navlink'><Icon icon={cart} /></Link></span>\n                <span className='no-of-products'>{totalQty}</span>\n                <span><button className='logout-btn' onClick={handleLogout}>Logout</button></span>\n            </div>}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ProductsContext } from '../Global/ProductsContext'\nimport { CartContext } from '../Global/CartContext'\nimport imageUrl from '../images/slide.jpg'\n\nexport const Products = () => {\n\n    const { products } = useContext(ProductsContext);\n\n    const { dispatch } = useContext(CartContext);\n\n    return (\n        <>\n            {products.length !== 0 && <img className='slideer' src={imageUrl} alt=\"Product\" />}\n            {products.length !== 0 && <h1>Products</h1>}\n\n            <div className='products-container'>\n                {products.length === 0 && <div>No products to display</div>}\n                {products.map(product => (\n                    <div className='product-card' key={product.ProductID}>\n                        <div className='product-img'>\n                            <img src={product.ProductImg} alt=\"not found\" />\n                        </div>\n                        <div className='product-name'>\n                            {product.ProductName}\n                        </div>\n                        <div className='product-price'>\n                            {product.ProductPrice}.00 MAD\n                    </div>\n                        <button className='addcart-btn' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product })}>ADD TO CART</button>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { FaWhatsapp } from 'react-icons/fa';\n\nexport const ContactInfo = () => {\n    return (\n        <div className=\"contact-container\">\n            <h2 className=\"contact-heading\">Contact Us</h2>\n            <p className=\"contact-info\">Phone: +1234567890</p>\n            <p className=\"contact-info\">Email: contact@lorem.org</p>\n            <p className=\"contact-info\">Address: 11 Rue Maurice Bouchor 75014 PARIS</p>\n            <p className=\"contact-info\">WhatsApp: +212656246627</p>\n            <a href=\"https://wa.me/1234567890\" className=\"contact-link\">\n                <button className=\"whatsapp-button\">\n                    <FaWhatsapp /> WhatsApp\n                </button>\n            </a>\n        </div>\n    );\n}","import React, { useEffect } from 'react'\nimport { Footer } from './Footer';\nimport { Navbar } from './Navbar';\nimport { Products } from './Products'\nimport { ContactInfo } from './ContactInfo';\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Home = ({ user }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <div className='wrapper'>\n            <Navbar user={user} />\n            <Products />\n            <ContactInfo />\n            <Footer />\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { auth, db } from '../Config/Config';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../Signup.css';\nimport logo from '../images/ecommerceland.png'\n\nexport const Signup = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const history = useHistory();\n\n    const signup = (e) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n            db.collection('SignedUpUsersData').doc(cred.user.uid).set({\n                Name: name,\n                Email: email,\n                Password: password\n            }).then(() => {\n                setName('');\n                setEmail('');\n                setPassword('');\n                setError('');\n                history.push('/login');\n            }).catch(err => setError(err.message));\n        }).catch(err => setError(err.message));\n    }\n\n    return (\n        <div className='signup-container'>\n            <form className='signup-form' onSubmit={signup}>\n                <img className='logo' src={logo} alt=\"Logo\" />\n                <h2>Sign up</h2>\n                {error && <span className='error-msg'>{error}</span>}\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" id=\"name\" required onChange={(e) => setName(e.target.value)} value={name} />\n                \n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" required onChange={(e) => setEmail(e.target.value)} value={email} />\n                \n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" required onChange={(e) => setPassword(e.target.value)} value={password} />\n                \n                <button type=\"submit\" className='btn-submit'>SUBMIT</button>\n                \n                <span>Already have an account? Login <Link to=\"/login\">Here</Link></span>\n            </form>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { auth } from '../Config/Config';\nimport { Link } from 'react-router-dom';\nimport '../Login.css'; \nimport logo from '../images/ecommerceland.png'\n\nexport const Login = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const login = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).then(() => {\n            setEmail('');\n            setPassword('');\n            setError('');\n            props.history.push('/');\n        }).catch(err => setError(err.message));\n    }\n\n    return (\n        <div className='login-container'>\n            <div className='login-form'>\n                <img className='logo' src={logo} alt=\"Logo\" />\n                <h2>Sign in</h2>\n                <form autoComplete=\"off\" onSubmit={login}>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        value={email}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => setPassword(e.target.value)}\n                        value={password}\n                    />\n                    <div className='remember-me'>\n                        <input type=\"checkbox\" id=\"remember\" />\n                        <label htmlFor=\"remember\">Remember password</label>\n                    </div>\n                    <button type=\"submit\" className='login-btn'>LOGIN</button>\n                </form>\n                {error && <span className='error-msg'>{error}</span>}\n                <span>Don't have an account? Register\n                    <Link to=\"signup\"> Here</Link>\n                </span>\n            </div>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            notfound\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { Icon } from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md/ic_add'\nimport { ic_remove } from 'react-icons-kit/md/ic_remove'\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Cart = ({ user }) => {\n\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <>\n            <Navbar user={user} />\n            <>\n                {shoppingCart.length !== 0 && <h1>Shopping Cart</h1>}\n                <div className='cart-container'>\n                    {\n                        shoppingCart.length === 0 && <>\n                            <div>no items in your cart or slow internet causing trouble (Refresh the page) or you are not logged in</div>\n                            <div><Link to=\"/\">Return to Home page</Link></div>\n                        </>\n                    }\n                    {shoppingCart && shoppingCart.map(cart => (\n                        <div className='cart-card' key={cart.ProductID}>\n\n                            <div className='cart-img'>\n                                <img src={cart.ProductImg} alt=\"not found\" />\n                            </div>\n\n                            <div className='cart-name'>{cart.ProductName}</div>\n\n                            <div className='cart-price-orignal'>{cart.ProductPrice}.00 MAD</div>\n\n                            <div className='inc' onClick={() => dispatch({ type: 'INC', id: cart.ProductID, cart })}>\n                                <Icon icon={ic_add} size={24} />\n                            </div>\n\n                            <div className='quantity'>{cart.qty}</div>\n\n                            <div className='dec' onClick={() => dispatch({ type: 'DEC', id: cart.ProductID, cart })}>\n                                <Icon icon={ic_remove} size={24} />\n                            </div>\n\n                            <div className='cart-price'>\n                                {cart.TotalProductPrice}.00 MAD\n                            </div>\n\n                            <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart })}>\n                                <Icon icon={iosTrashOutline} size={24} />\n                            </button>\n                        </div>\n                    ))\n                    }\n                    {shoppingCart.length > 0 && <div className='cart-summary'>\n                        <div className='cart-summary-heading'>\n                            Cart-Summary\n                        </div>\n                        <div className='cart-summary-price'>\n                            <span>Total Price</span>\n                            <span>{totalPrice}</span>\n                        </div>\n                        <div className='cart-summary-price'>\n                            <span>Total Qty</span>\n                            <span>{totalQty}</span>\n                        </div>\n                        <Link to='cashout' className='cashout-link'>\n                            <button className='btn btn-success btn-md' style={{ marginTop: 5 + 'px' }}>\n                                Cash on delivery\n                        </button>\n                        </Link>\n                    </div>}\n                </div>\n            </>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { storage, db } from '../Config/Config';\nimport { Navbar } from './Navbar';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../Config/Config';\nimport '../AddProducts.css'; // Import the CSS file\n\nexport const AddProducts = ({ user }) => {\n    const history = useHistory();\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState(0);\n    const [productImg, setProductImg] = useState(null);\n    const [error, setError] = useState('');\n\n    const types = ['image/png', 'image/jpeg', 'image/jpg']; // image types\n\n    const productImgHandler = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile && types.includes(selectedFile.type)) {\n            setProductImg(selectedFile);\n            setError('');\n        } else {\n            setProductImg(null);\n            setError('Please select a valid image type (jpg or jpeg or png)');\n        }\n    };\n\n    const addProduct = (e) => {\n        e.preventDefault();\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log(progress);\n            },\n            (err) => setError(err.message),\n            () => {\n                storage.ref('product-images').child(productImg.name).getDownloadURL().then((url) => {\n                    db.collection('Products')\n                        .add({\n                            ProductName: productName,\n                            ProductPrice: Number(productPrice),\n                            ProductImg: url,\n                        })\n                        .then(() => {\n                            setProductName('');\n                            setProductPrice(0);\n                            setProductImg('');\n                            setError('');\n                            document.getElementById('file').value = '';\n                        })\n                        .catch((err) => setError(err.message));\n                });\n            }\n        );\n    };\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged((user) => {\n            if (!user) {\n                history.push('/login');\n            }\n        });\n    }, [history]);\n\n    return (\n        <div className=\"container\">\n            <Navbar user={user} />\n            <h2>Add New Product</h2>\n            <form autoComplete=\"off\" onSubmit={addProduct} className=\"form-group\">\n                <label htmlFor=\"product-name\">Product Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    required\n                    onChange={(e) => setProductName(e.target.value)}\n                    value={productName}\n                />\n                <label htmlFor=\"product-price\">Product Price</label>\n                <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    required\n                    onChange={(e) => setProductPrice(e.target.value)}\n                    value={productPrice}\n                />\n                <label htmlFor=\"product-img\">Product Image</label>\n                <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    id=\"file\"\n                    required\n                    onChange={productImgHandler}\n                />\n                <button type=\"submit\" className=\"btn btn-success btn-md mybtn\">\n                    Add Product\n                </button>\n            </form>\n            {error && <span className=\"error-msg\">{error}</span>}\n        </div>\n    );\n};\n","import React, { useState, useEffect, useContext } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { useHistory } from 'react-router-dom'\n\nexport const Cashout = (props) => {\n\n    const history = useHistory();\n\n    const { totalPrice, totalQty, dispatch } = useContext(CartContext);\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [cell, setCell] = useState('');\n    const [address, setAddress] = useState('');\n    const [error, setError] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\n                    setName(snapshot.data().Name);\n                    setEmail(snapshot.data().Email);\n                })\n            }\n            else {\n                history.push('/login')\n            }\n        })\n    })\n\n    const cashoutSubmit = (e) => {\n        e.preventDefault();\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                const date = new Date();\n                const time = date.getTime();\n                db.collection('Buyer-info ' + user.uid).doc('_' + time).set({\n                    BuyerName: name,\n                    BuyerEmail: email,\n                    BuyerCell: cell,\n                    BuyerAddress: address,\n                    BuyerPayment: totalPrice,\n                    BuyerQuantity: totalQty\n                }).then(() => {\n                    setCell('');\n                    setAddress('');\n                    dispatch({ type: 'EMPTY' })\n                    setSuccessMsg('Your order has been placed successfully. Thanks for visiting us. You will be redirected to home page after 5 seconds');\n                    setTimeout(() => {\n                        history.push('/')\n                    }, 5000)\n                }).catch(err => setError(err.message))\n            }\n        })\n    }\n\n    return (\n        <>\n            <Navbar user={props.user} />\n            <div className='container'>\n                <br />\n                <h2>Cashout Details</h2>\n                <br />\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className='form-control' required\n                        value={name} disabled />\n                    <br />\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" className='form-control' required\n                        value={email} disabled />\n                    <br />\n                    <label htmlFor=\"Cell No\">Cell No</label>\n                    <input type=\"number\" className='form-control' required\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='eg 03123456789' />\n                    <br />\n                    <label htmlFor=\"Delivery Address\">Delivery Address</label>\n                    <input type=\"text\" className='form-control' required\n                        onChange={(e) => setAddress(e.target.value)} value={address} />\n                    <br />\n                    <label htmlFor=\"Price To Pay\">Price To Pay</label>\n                    <input type=\"number\" className='form-control' required\n                        value={totalPrice} disabled />\n                    <br />\n                    <label htmlFor=\"Total No of Products\">Total No of Products</label>\n                    <input type=\"number\" className='form-control' required\n                        value={totalQty} disabled />\n                    <br />\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\n                </form>\n                {error && <span className='error-msg'>{error}</span>}\n            </div>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { ProductsContextProvider } from './Global/ProductsContext'\nimport { Home } from './Components/Home'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Signup } from './Components/Signup'\nimport { Login } from './Components/Login'\nimport { NotFound } from './Components/NotFound'\nimport { auth, db } from './Config/Config'\nimport { CartContextProvider } from './Global/CartContext'\nimport { Cart } from './Components/Cart'\nimport { AddProducts } from './Components/AddProducts'\nimport { Cashout } from './Components/Cashout'\n\nexport class App extends Component {\n\n    state = {\n        user: null,\n    }\n\n    componentDidMount() {\n\n        // getting user info for navigation bar\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\n                    const userData = snapshot.data();\n                    if (userData) {\n                        this.setState({\n                            user: userData.Name\n                        })\n                    } else {\n                        console.log(`No document found with id: ${user.uid}`);\n                    }\n                })\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <ProductsContextProvider>\n                <CartContextProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            {/* home */}\n                            <Route exact path='/' component={() => <Home user={this.state.user} />} />\n                            {/* signup */}\n                            <Route path=\"/signup\" component={Signup} />\n                            {/* login */}\n                            <Route path=\"/login\" component={Login} />\n                            {/* cart products */}\n                            <Route path=\"/cartproducts\" component={() => <Cart user={this.state.user} />} />\n                            {/* add products */}\n                            <Route path=\"/addproducts\" component={AddProducts} />\n                            {/* cashout */}\n                            <Route path='/cashout' component={() => <Cashout user={this.state.user} />} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </BrowserRouter>\n                </CartContextProvider>\n            </ProductsContextProvider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n\n  <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}